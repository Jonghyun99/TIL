## 변수 관련 함수

### 변수의 타입 변경

gettype() : 전달받은 변수의 타입을 반환한다.

settype() : 변수 타입을 변경한다.

```php
$x = 5;
echo gettype($x);      // integer

settype($x, "string");
echo gettype($x);      // string
```

gettype보다는 아래 함수를 사용하는 것이 더 좋다.

- is_array() :전달받은 변수의 타입이 배열인지를 확인함.
- is_bool() :전달받은 변수의 타입이 논리형인지를 확인함.
- is_callable() :변수의 내용을 함수처럼 호출할 수 있는지를 확인함.
- is_float(),
is_double(),
is_real()	전달받은 변수의 타입이 실수인지를 확인함.
- is_int(),
is_integer(),
is_long()	전달받은 변수의 타입이 정수인지를 확인함.
- is_null()	전달받은 변수의 타입이 NULL인지를 확인함.
- is_numeric()	전달받은 변수가 수나 숫자로 이루어진 문자열인지를 확인함.
- is_object()	전달받은 변수의 타입이 객체인지를 확인함.
- is_resource()	전달받은 변수의 타입이 자원인지를 확인함.
- is_scalar()	전달받은 변수가 스칼라값인지를 확인함.
- is_string()	전달받은 변수의 타입이 문자열인지를 확인함.

### 변수의 상태 변경

isset : 함수는 전달받은 변수가 선언되어 있는지를 검사한다.

선언된 변수가 존재하면 true를, 존재하지 않으면 false반환

unset() : 변수 제거

empty() : 변수가 비어있는지 검사

```php
$var;
var_dump(isset($var)); // false
var_dump(empty($var)); // true

$var = 5;
var_dump(isset($var)); // true
var_dump(empty($var)); // false

$var = 0;
var_dump(isset($var)); // true
var_dump(empty($var)); // true

unset($var);
var_dump(isset($var)); // false
var_dump(empty($var)); // true
```

위 예제에서 $var 변수를 선언만 하고 초기화 하지 않은 상태에서 isset 함수를 호출하면 false를 반환한다.

하지만 초기화 한후에는 true를 반환한다.

### 특정 타입으로 변경

intval() 전달받은 변수에 해당하는 정수를 반환한다.

flotaval() 함수와 doubleval() 함수는 전달받은 변수에 해당하는 실수를 반환한다.

strval()은 전달받은 변수에 해당하는 문자열을 반환한다.

```php
$x = "123.56789abc";
echo intval($x);   // 123
echo floatval($x); // 123.56789
echo strval($x);   // 123.56789abc
```

## 배열 관련 함수

### 배열의 생성

array()

```php
$arr = array(1,2,3,4,5);
```

### 배열 요소의 개수

count() 함수와 sizeof()는 배열 개수를 반환한다.

array_count_values() 함수는 전달받은 배열의 배열요소 값을 모두 확인하여, 해당 값이 몇 번 등장아하는지를 확인한다. 그 후 배열 요소의 값을 (key), 빈도를 값(value)으로 하는 연관 배열을 반환한다.

```php
$arr = array(1, 5, 7, 3, 3, 1, 2);

echo "배열 요소의 수는 ".count($arr)."입니다.";  // 7
echo "배열 요소의 수는 ".sizeof($arr)."입니다."; // 7

$acv = array_count_values($arr);   // 1 : 2번, 5 : 1번, 7 : 1번, 3 : 2번, 2 : 1번
```

### 배열의 탐색

- current(), pos() : 배열 포인터가 가리키는 요소를 반환한다.
- next() : 배열 포인터를 앞으로 하나 이동시킨 후, 해당 요소를 반환한다.
- prev() : next() 함수와는 반대로 이동시킨 후, 요소 반환
- each() : 배열 포인터가 가리키는 요소의 키, 값을 배열로 반환하고 포인터 앞으로 이동
- reset() : 배열 포인터가 첫 번째 배열 요소 가리키도록 한 뒤, 해당 요소 반환
- end() : 마지막 요소 가리키고 반환

### 배열의 정렬

sort() : 배열 요소들을 정렬 기준에 맞게 정렬한다.

sort() 함수의 두 번째 인수로 배열 요소를 정렬할 기준을 전달할 수 있다.

SORT_NUMERIC은 숫자로, SORT_STRING은 문자열로 비교한다.

만약 정렬 기준을 전달하지 않으면, 배열 요소들의 타입을 변경하지 않고 그대로 비교한다.

```php
$arr = array(15, 2, 1, 21, 121);

sort($arr, SORT_NUMERIC); // 배열 요소를 숫자로 비교함.   -> 1, 2, 15, 21, 121
sort($arr, SORT_STRING);  // 배열 요소를 문자열로 비교함. -> 1, 121, 15, 2, 21
```

sort()는 대소문자를 구분하고, 대문자가 앞으로 온다.

정렬 성공시 true, 실패시 false 반환한다.

### 연관 배열의 정렬

ksort() : 키값 기준 정렬

asort() : 값 기준 정렬

```php
$arr = array("apple" => 1000, "banana" => 2000, "orange" => 1500);

asort($arr); // 요소의 값을 기준으로 배열 정렬 -> apple, orange, banana
ksort($arr); // 키값을 기준으로 배열 정렬      -> apple, banana, orange
```

### 배열 요소의 재배치

shuffle() : 배열 요소를 섞어 무작위로 재배치

```php
$arr = array(1, 2, 3, 4, 5);
shuffle($arr);              // 배열 요소를 무작위로 재배치함.
```

array_reverse() : 함수는 전달받은 배열의 순서를 역순으로 새로운 배열을 반환한다.

## 문자열 관련 함수

### 문자열 길이

- strlen() : 문자열 길이 반환, 만약 한글이 포함되면 총 바이트 수를 반환한다. 정확한 길이를 반환받고 싶으면 mb_strlen()를 사용해야한다.

```php
$str = "한글로된문자열";

echo strlen($str);             // 7 * 3 = 21
echo mb_strlen($str);          // 7 * 3 = 21
echo mb_strlen($str, "UTF-8"); // 7
```

### 문자열 비교

- strcmp() : 두 문자열을 비교해서 첫 번째 문자열이 더 크면 양수, 작으면 음수반환, 같으면 0반환하며 대소문자를 구분하고 strncasecmp()를 사용하면 대소문자를 구분하지 않고 비교한다.
- strstr() : 처음으로 일치하는 문자열 탐색하여 이후 모든 문자 반환

### 특정 문자열 검색

- strchr() : 마지막으로 일치하는 문자열 탐색하여 이후 모든 문자 반환
- stristr : 대소문자를 구분하지 않음

### 특정 문자열 위치 찾기

- strpos() : 처음 일치하는 시작 인데스 반환
- strrpos : 마지막 일치하는 인덱스 반환

### 문자열 추출하기

- substr() : 문자열에서 특정 인덱스부터 전달받은 길이까지 추출한다.
- 음수라면 음수의 절댓값까지 문자열을 반환한다.

### 대소문자 변환

- strtolower() : 모두 소문자 변환
- strtoupper() : 모두 대문자 변환
- ucfirst() : 첫 단어만 대문자 변환
- ucwords() : 단어 별 첫 문자만 대문자로 변환

### 문자열 합치고 나누기

- explode() : 특정 문자로 문자열을 나누어 배열 반환
- implode(), join() : 전달받은 배열의 요소를 특정 문자로 하나의 합쳐진 문자열로 반환
- strtok() : 문자열을 특정 문자를 기준으로 토큰화 한다.

### 문자열 대체하기

- str_replace() : 문자열에서 전달받은 문자열 모두 찾은 후, 대체 문자열로 교체
- substr_replace() : 문자열 특정 위치 문자를 대체 문자열로 교체
세 번째 인자 : 시작위치, 네 번째 인자 : 종료 위치

```php
$str = "hello, world!";
echo str_replace('o', '*', $str);      // 문자열의 모든 'o'를 '*'로 대체함.
echo substr_replace($str, '*', 2);     // 세 번째 문자부터 끝까지를 '*'로 대체함.
echo substr_replace($str, '*', -2);    // 끝에서 두 번째 문자부터 끝까지를 '*'로 대체함.
echo substr_replace($str, '*', 2, 4);  // 세 번째 문자부터 네 글자를 '*'로 대체함.
echo substr_replace($str, '*', 2, -4); // 세 번째 문자부터 끝에서 다섯 번째 문자까지를 '*'로 대체함.
echo substr_replace($str, '*', 2, 0);  // 두 번째 문자 뒤에 '*'을 삽입함.
```

### 문자열 다듬기

- ltrim(): 앞부분 공백제거
- rtrim(): 뒷부분 공백제거
- trim(): 앞뒤 공백제거

띄어쓰기, 탭, 줄바꿈, 널, 수직 탭 등 제거함